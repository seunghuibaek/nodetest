-------------------------------------------------------
설치정보
-- package.json 만들어주는 명령어. 프로젝트에 대한 정보. 패키지에 대한 내역이 기역됨
-- package에 내역이 남아 있다면 node_moudules 폴더를 삭제해도 npm i 명령어를 통해 다시 설치 할 수 있음
-- package-lock.json 에 자동으로 설치된 패키지가 등록됨
npm init -y

-- 설치(node_moudules 폴더 생성)  -D를 붙이면 내부  dependencis로 설치(개발용으로 의존성 패키지 설치)
npm install parcel-bundler -D

-- 설치 (lodash 패키지) 일반 의존성 설치(웹사이트에서 실제 동작하는 패키지)
npm install lodash
-------------------------------------------------------

-------------------------------------------------------
서버 온
터미널 오픈
package.json 열어서 scripts 부분에 "dev": "parcel index.html" 입력
터미널에서 실행 npm run dev
build 는 실 사용자들이 보는 페이지로 빌드
npm run build     --> dist 폴더 생성됨(파일은 난독화(다 붙어서) 되어 보임)
-------------------------------------------------------

-------------------------------------------------------
유의적 버전(Semantic versioning, SemVer)
버전에 의미를 부여하고 해석 할 수 있다

Major.Minor.Patch
E.g, 12.14.1

Major
12  -> 기존버전과 호환되지 않는 새로운 버전(기존과 호환되지 않는 버전)
Minor
14  -> 기존 버전과 호환되는 새로운 기능이 추가된 버전
Patch
1  -> 기존 버전과 호환되는 버그 및 오타 등이 수정된 버전.

Major.Minor.Patch
E.g, ^12.14.1
^ --> Major 버전 안에서 가장 최신 버전으로 업데이트 가능
패키지에서 ^ 지울 경우 버전 업데이트가 되지 않는다

npm info lodash   --> 패키지 정보
npm install lodash@4.17.20  --> 다른 버전 설치하면서 기존 버전 엎어짐
npm update lodash   -- 최신 버전으로 업데이트
-------------------------------------------------------
git

git init 설정
git status
git add .
git status
git commit -m '프로젝트 생성'
git log
